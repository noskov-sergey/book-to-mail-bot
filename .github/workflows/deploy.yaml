name: Deploy

on:
  pull_request:
    branches: [ main, master ]
env:
  REGISTRY: "synoskov"
  IMAGE_NAME: "book-to-mail-bot"
  CONTAINER_NAME: "book-to-mail-bot-container"

jobs:
  linter:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54
          args: --timeout=30m --config=./.golangci.pipeline.yaml --issues-exit-code=0

  build-and-test:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: go.sum

      - name: Build
        run: go build -o ./bin/ -v ./...

      - name: Test
        run: go test -v ./...

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          file: ./prod.Dockerfile
          push: true
          tags: synoskov/book-to-mail-bot:latest

  deploy-image:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
      - name: Deploy to AEZA Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME, REGISTRY, GITHUB_SHA, CONTAINER_NAME
          script: |
            #Stop running container
            sudo docker stop book-to-mail-bot
            
            #Remove container
            sudo docker rm book-to-mail-bot
            
            # Pull new registry container
            docker pull $REGISTRY/$IMAGE_NAME:latest
            
            touch ./app_bot/.env
            cd app_bot
            
            echo CONFIG_PATH=${{ secrets.PATH }} >> .env
            echo CONFIG_PATH=${{ secrets.BATCH_SIZE }} >> .env
            echo CONFIG_PATH=${{ secrets.TELEGRAM_TOKEN }} >> .env
            echo CONFIG_PATH=${{ secrets.TELEGRAM_HOST }} >> .env
            echo CONFIG_PATH=${{ secrets.MAIL_PORT }} >> .env
            echo CONFIG_PATH=${{ secrets.MAIL_PASSWORD }} >> .env
            echo CONFIG_PATH=${{ secrets.MAIL_HOST }} >> .env
            echo CONFIG_PATH=${{ secrets.MAIL_FROM }} >> .env
            echo CONFIG_PATH=${{ secrets.MAIL_TO }} >> .env
            
            # Run a new container from a new image
            sudo docker run -d -p 5000:5000 --name book-to-mail-bot synoskov/book-to-mail-bot